<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM32L152-EVAL\Key-Iap.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM32L152-EVAL\Key-Iap.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Thu May 02 09:34:23 2013
<BR><P>
<H3>Maximum Stack Usage =        240 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Write_Update_Finish_Flag &rArr; FLASH_If_Write &rArr; FLASH_ProgramHalfPage &rArr; WaitForLastOperation
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[41]">AES_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32l1xx_it.o(i.BusFault_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[42]">COMP_ACQ_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[20]">COMP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1f]">DAC_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel4_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[40]">DMA2_Channel5_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32l1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l1xx_it.o(i.HardFault_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[22]">LCD_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32l1xx_it.o(i.MemManage_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l1xx_it.o(i.NMI_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32l1xx_it.o(i.PendSV_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[37]">SDIO_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[39]">SPI3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32l1xx_it.o(i.SVC_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32l1xx_it.o(i.SysTick_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[44]">SystemInit</a> from system_stm32l1xx.o(i.SystemInit) referenced from startup_stm32l1xx_hd.o(.text)
 <LI><a href="#[c]">TAMPER_STAMP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[24]">TIM10_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[25]">TIM11_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[38]">TIM5_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[35]">TIM6_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[36]">TIM7_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[23]">TIM9_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3a]">UART4_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[3b]">UART5_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[34]">USB_FS_WKUP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32l1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32l1xx_hd.o(.text) referenced from startup_stm32l1xx_hd.o(RESET)
 <LI><a href="#[45]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l1xx_hd.o(.text)
 <LI><a href="#[43]">main</a> from main.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[45]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[46]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[69]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>COMP_ACQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USB_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l1xx_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DATA_EEPROM_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.DATA_EEPROM_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Unlock
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[49]"></a>FLASH_ErasePage</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, stm32l1xx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Erase
</UL>

<P><STRONG><a name="[5c]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[4b]"></a>FLASH_If_DisableWriteProtection</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, flash_if.o(i.FLASH_If_DisableWriteProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = FLASH_If_DisableWriteProtection &rArr; FLASH_If_WriteProtectionConfig &rArr; FLASH_OB_WRPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Unlock
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_WriteProtectionConfig
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Update_Finish_Flag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[50]"></a>FLASH_If_Erase</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, flash_if.o(i.FLASH_If_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_If_Erase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Update_Finish_Flag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[4d]"></a>FLASH_If_GetWriteProtectionStatus</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, flash_if.o(i.FLASH_If_GetWriteProtectionStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_If_GetWriteProtectionStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetWRP2
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetWRP1
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetWRP
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[54]"></a>FLASH_If_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash_if.o(i.FLASH_If_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FLASH_If_Init &rArr; FLASH_Unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Update_Finish_Flag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[56]"></a>FLASH_If_Write</STRONG> (Thumb, 130 bytes, Stack size 160 bytes, flash_if.o(i.FLASH_If_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = FLASH_If_Write &rArr; FLASH_ProgramHalfPage &rArr; WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfPage (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Update_Finish_Flag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[4f]"></a>FLASH_If_WriteProtectionConfig</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, flash_if.o(i.FLASH_If_WriteProtectionConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FLASH_If_WriteProtectionConfig &rArr; FLASH_OB_WRPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRP2Config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRP1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[52]"></a>FLASH_OB_GetWRP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_OB_GetWRP))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
</UL>

<P><STRONG><a name="[53]"></a>FLASH_OB_GetWRP1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_OB_GetWRP1))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
</UL>

<P><STRONG><a name="[51]"></a>FLASH_OB_GetWRP2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_flash.o(i.FLASH_OB_GetWRP2))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_GetWriteProtectionStatus
</UL>

<P><STRONG><a name="[4e]"></a>FLASH_OB_Unlock</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, stm32l1xx_flash.o(i.FLASH_OB_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_OB_Unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>

<P><STRONG><a name="[59]"></a>FLASH_OB_WRP1Config</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, stm32l1xx_flash.o(i.FLASH_OB_WRP1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FLASH_OB_WRP1Config &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_WriteProtectionConfig
</UL>

<P><STRONG><a name="[5a]"></a>FLASH_OB_WRP2Config</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, stm32l1xx_flash.o(i.FLASH_OB_WRP2Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FLASH_OB_WRP2Config &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_WriteProtectionConfig
</UL>

<P><STRONG><a name="[58]"></a>FLASH_OB_WRPConfig</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, stm32l1xx_flash.o(i.FLASH_OB_WRPConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FLASH_OB_WRPConfig &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_WriteProtectionConfig
</UL>

<P><STRONG><a name="[5e]"></a>FLASH_PagesMask</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash_if.o(i.FLASH_PagesMask))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[55]"></a>FLASH_Unlock</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, stm32l1xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_Unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATA_EEPROM_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Update_Finish_Flag
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
</UL>

<P><STRONG><a name="[4a]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32l1xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRPConfig
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRP2Config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WRP1Config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[5d]"></a>Flash_Update_Program</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, flash_if.o(i.Flash_Update_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Flash_Update_Program &rArr; FLASH_If_Write &rArr; FLASH_ProgramHalfPage &rArr; WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Read_Update_Data
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PagesMask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Write
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l1xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reset
</UL>

<P><STRONG><a name="[60]"></a>Read_Update_Finish_Flag</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, flash_if.o(i.Read_Update_Finish_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Read_Update_Finish_Flag &rArr; FLASH_Unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32l1xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>System_Reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.System_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = System_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_Enable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l1xx_hd.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>User_Read_Update_Data</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, flash_if.o(i.User_Read_Update_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = User_Read_Update_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
</UL>

<P><STRONG><a name="[64]"></a>WWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_wwdg.o(i.WWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reset
</UL>

<P><STRONG><a name="[65]"></a>Write_Update_Finish_Flag</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, flash_if.o(i.Write_Update_Finish_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Write_Update_Finish_Flag &rArr; FLASH_If_Write &rArr; FLASH_ProgramHalfPage &rArr; WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Write
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Erase
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_DisableWriteProtection
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main &rArr; Write_Update_Finish_Flag &rArr; FLASH_If_Write &rArr; FLASH_ProgramHalfPage &rArr; WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Reset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Update_Finish_Flag
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Update_Finish_Flag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Update_Program
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[57]"></a>FLASH_ProgramHalfPage</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32l1xx_flash_ramfunc.o(i.FLASH_ProgramHalfPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ProgramHalfPage &rArr; WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_If_Write (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[67]"></a>GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32l1xx_flash_ramfunc.o(i.GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForLastOperation
</UL>

<P><STRONG><a name="[66]"></a>WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32l1xx_flash_ramfunc.o(i.WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfPage
</UL>

<P><STRONG><a name="[61]"></a>SetSysClock</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, system_stm32l1xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
